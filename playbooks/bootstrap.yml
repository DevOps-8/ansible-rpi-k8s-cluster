---
- hosts: rpi_k8s_master
  pre_tasks:
    - name: Updating APT Cache
      apt:
        cache_valid_time: 1800
      become: true

    - name: Installing iptables-persistent
      apt:
        name: iptables-persistent
        state: present
      become: true

    - name: Ensuring netfilter-persistent Is Enabled and Starts On Reboot
      service:
        name: netfilter-persistent
        enabled: true
      become: true

    - name: Setting Up IP Forwarding On Primary
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
      become: true

    - name: Configuring Static IP On Primary
      template:
        src: templates/dhcpcd.conf.j2
        dest: /etc/dhcpcd.conf
      become: true
      register: _dhcpcd_config

    - name: Updating /etc/hosts
      template:
        src: templates/hosts.j2
        dest: /etc/hosts
      become: true

    - name: Restarting Host
      shell: sleep 2 && shutdown -r now "rebooting to complete hostname change"
      async: 1
      poll: 0
      ignore_errors: true
      become: true
      register: _restarting_host
      when: _dhcpcd_config['changed']

    - name: Waiting For Host To Respond
      wait_for_connection:
    # - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
    #   wait_for:
    #     port: 22
    #     host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
    #     search_regex: OpenSSH
    #     delay: 10
    #   connection: local
    #   when: _restarting_host['changed']

    - name: Configuring IPTables
      iptables:
        table: nat
        chain: POSTROUTING
        source: "{{ dhcp_scope_subnet }}.0/24"
        out_interface: wlan0
        jump: MASQUERADE
      register: _iptables_configured
      become: true

    - name: Saving IPTables Rules
      command: service netfilter-persistent save
      become: true
      when: _iptables_configured['changed']

    - name: Adding Local User SSH Key
      authorized_key:
        user: "{{ rpi_username }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
      become: true

    - name: Managing WI-FI Connection
      template:
        src: templates/wpa_supplicant.conf.j2
        dest: /etc/wpa_supplicant/wpa_supplicant.conf
        mode: u=rw,g=,o=
      become: true
      register: _wifi_configured
      tags:
        - rpi-manage-wifi
      when: >
            k8s_wifi_country is defined and
            k8s_wifi_password is defined and
            k8s_wifi_ssid is defined

    - name: Restarting Networking After WI-FI Configured
      service:
        name: networking
        state: restarted
        args: wlan0
      become: true
      async: 1
      poll: 0
      register: _wifi_restarted
      tags:
        - rpi-manage-wifi
      when: _wifi_configured['changed']

    # This will fail if the IP address changes on the host
    - name: Waiting For WI-FI To Resume
      wait_for_connection:
      tags:
        - rpi-manage-wifi
      when: _wifi_restarted['changed']

  roles:
    - role: ansible-change-hostname
    - role: ansible-isc-dhcp

  post_tasks:
    - name: Ensuring isc-dhcp-server Is Started And Enabled On Boot
      service:
        name: isc-dhcp-server
        state: started
        enabled: true
      become: true

- hosts: rpi_k8s_slaves
  tasks:
    - name: Waiting For Slaves To Respond
      wait_for_connection:

    - name: Adding Local User SSH Key
      authorized_key:
        user: "{{ rpi_username }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
      become: true

    # - command: ping -c 2 {{ hostvars[inventory_hostname]['ansible_host'] }}
    #   register: _ping
    #   until: _ping['rc'] == 0
    #   retries: 30
    #   delay: 2
    #   with_items: "{{ groups['rpi_k8s_slaves'] }}"

- hosts: rpi_k8s_slaves
  pre_tasks:
    - name: Updating /etc/hosts
      template:
        src: templates/hosts.j2
        dest: /etc/hosts
      become: true

    - name: Updating APT Cache
      apt:
        cache_valid_time: 1800
      become: true
  roles:
    - role: ansible-change-hostname

- hosts: rpi_k8s
  tasks:
    - name: Installing vim
      apt:
        name: vim
        state: present
      become: true

    - name: Disabling Swap
      service:
        name: dphys-swapfile
        enabled: false
        state: stopped
      become: true

    - name: Configuring cmdline Boot
      template:
        src: templates/cmdline.txt.j2
        dest: /boot/cmdline.txt
      become: true
      register: _cmdline_boot

    - name: Restarting Host
      shell: sleep 2 && shutdown -r now "rebooting to complete hostname change"
      async: 1
      poll: 0
      ignore_errors: true
      become: true
      register: _reboot_slaves
      when: >
            _cmdline_boot['changed'] and
            inventory_hostname in groups['rpi_k8s_slaves']

    - name: Waiting For Host To Respond
      wait_for_connection:
      when: _reboot_slaves['changed']

    # - command: ping -c 2 {{ hostvars[inventory_hostname]['ansible_host'] }}
    #   register: _ping
    #   until: _ping['rc'] == 0
    #   retries: 30
    #   delay: 2
    #   with_items: "{{ groups['rpi_k8s_slaves'] }}"
    #   when: _reboot_slaves['changed']

    - name: Restarting Host
      shell: sleep 2 && shutdown -r now "rebooting to complete hostname change"
      async: 1
      poll: 0
      ignore_errors: true
      become: true
      register: _reboot_master
      when: >
            _cmdline_boot['changed'] and
            inventory_hostname in groups['rpi_k8s_master']

    - name: Waiting For Host To Respond
      wait_for_connection:
      when: _reboot_master['changed']

    # - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
    #   wait_for:
    #     port: 22
    #     host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
    #     search_regex: OpenSSH
    #     delay: 10
    #   connection: local
    #   when: _reboot_master['changed']
